name: ci/cd

on:
  push:
    branches: [ deploy ]

env:
  DOCKER_IMAGE: ghcr.io/${{ github.actor }}/foodiebuddy_chat
  VERSION: ${{ github.sha }}
  NAME: foodiebuddy_chat


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{secrets.OPENAI_API_KEY}}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create .env file
        run: |
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
        shell: bash
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }}
          restore-keys: |
            ${{ runner.os }}-buildx-
            
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Login to Docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true 
          tags: ${{ env.DOCKER_IMAGE }}:latest
          platforms: |
            linux/amd64
            linux/arm64
            # linux/arm64/v8
            linux/arm/v7
          

  deploy:
    needs: build
    name: Deploy
    runs-on: [ self-hosted, label-foodiebuddy ]
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Create .env file
        run: |
          touch .env
          echo "$ENV" > .env
        env:
          DEV_ENV: ${{ secrets.ENV }}

      - name: Docker run
        run: |
          sudo docker stop ${{ env.NAME }} && sudo docker rm ${{ env.NAME }} && sudo docker rmi ${{ env.DOCKER_IMAGE }}:latest
          # sudo docker stop ${{ env.NAME }} || true
          # sudo docker rm ${{ env.NAME }} || true
          # sudo docker rmi -f ${{ env.DOCKER_IMAGE }}:latest || true
          # sudo docker pull ${{ env.DOCKER_IMAGE }}:latest
          sudo docker run -d -p 8000:8000 --name ${{ env.NAME }} --restart always \
          --platform linux/arm64 \
          -e OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
          ${{ env.DOCKER_IMAGE }}:latest
